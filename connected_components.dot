digraph G {
	graph [rankdir=TB];
	subgraph cluster_G {
		graph [fillcolor="#80808018",
			label="",
			style="filled,rounded"
		];
		errors		 [fillcolor="#ffffffb2",
			fontcolor="#000000",
			group=0,
			label=errors,
			style=filled];
		layers		 [fillcolor="#ffffffb2",
			fontcolor="#000000",
			group=1,
			label=layers,
			style=filled];
		matching		 [fillcolor="#ffffffb2",
			fontcolor="#000000",
			group=2,
			label=matching,
			style=filled];
		matching_test		 [fillcolor="#ffffffb2",
			fontcolor="#000000",
			group=3,
			label=matching_test,
			style=filled];
		result_one_point_hybrid		 [fillcolor="#ffffffb2",
			fontcolor="#000000",
			group=4,
			label=result_one_point_hybrid,
			style=filled];
		result_one_point_local		 [fillcolor="#ffffffb2",
			fontcolor="#000000",
			group=5,
			label=result_one_point_local,
			style=filled];
		result_one_point_model		 [fillcolor="#ffffffb2",
			fontcolor="#000000",
			group=6,
			label=result_one_point_model,
			style=filled];
		result_one_point_nn		 [fillcolor="#ffffffb2",
			fontcolor="#000000",
			group=7,
			label=result_one_point_nn,
			style=filled];
		result_one_point_random		 [fillcolor="#ffffffb2",
			fontcolor="#000000",
			group=8,
			label=result_one_point_random,
			style=filled];
		result_one_point_tau		 [fillcolor="#ffffffb2",
			fontcolor="#000000",
			group=9,
			label=result_one_point_tau,
			style=filled];
		result_simulate		 [fillcolor="#ffffffb2",
			fontcolor="#000000",
			group=10,
			label=result_simulate,
			style=filled];
		surface_code		 [fillcolor="#ffffffb2",
			fontcolor="#000000",
			group=11,
			label=surface_code,
			style=filled];
		errors__Generator		 [fillcolor="#feccccb2",
			fontcolor="#000000",
			group=0,
			label="Generator\n\n(errors.py:18,\nclass in errors)",
			style=filled];
		errors__Generator____init__		 [fillcolor="#ff9999b2",
			fontcolor="#000000",
			group=0,
			label="__init__\n\n(errors.py:19,\nmethod in errors.Generator)",
			style=filled];
		errors__Generator___generate_name		 [fillcolor="#ff9999b2",
			fontcolor="#000000",
			group=0,
			label="_generate_name\n\n(errors.py:67,\nmethod in errors.Generator)",
			style=filled];
		errors__Generator___load_model		 [fillcolor="#ff9999b2",
			fontcolor="#000000",
			group=0,
			label="_load_model\n\n(errors.py:73,\nmethod in errors.Generator)",
			style=filled];
		errors__Generator___pauli_error		 [fillcolor="#ff9999b2",
			fontcolor="#000000",
			group=0,
			label="_pauli_error\n\n(errors.py:176,\nmethod in errors.Generator)",
			style=filled];
		errors__Generator___symbol_to_error		 [fillcolor="#ff9999b2",
			fontcolor="#000000",
			group=0,
			label="_symbol_to_error\n\n(errors.py:163,\nmethod in errors.Generator)",
			style=filled];
		errors__Generator___symbol_to_error_list		 [fillcolor="#ff9999b2",
			fontcolor="#000000",
			group=0,
			label="_symbol_to_error_list\n\n(errors.py:141,\nmethod in errors.Generator)",
			style=filled];
		errors__Generator__get_errors		 [fillcolor="#ff9999b2",
			fontcolor="#000000",
			group=0,
			label="get_errors\n\n(errors.py:83,\nmethod in errors.Generator)",
			style=filled];
		layers__Layers		 [fillcolor="#fee3ccb2",
			fontcolor="#000000",
			group=1,
			label="Layers\n\n(layers.py:12,\nclass in layers)",
			style=filled];
		layers__Layers____init__		 [fillcolor="#ffc899b2",
			fontcolor="#000000",
			group=1,
			label="__init__\n\n(layers.py:18,\nmethod in layers.Layers)",
			style=filled];
		layers__Layers__add		 [fillcolor="#ffc899b2",
			fontcolor="#000000",
			group=1,
			label="add\n\n(layers.py:79,\nmethod in layers.Layers)",
			style=filled];
		layers__Layers__decode		 [fillcolor="#ffc899b2",
			fontcolor="#000000",
			group=1,
			label="decode\n\n(layers.py:53,\nmethod in layers.Layers)",
			style=filled];
		layers__Layers__find_anyons		 [fillcolor="#ffc899b2",
			fontcolor="#000000",
			group=1,
			label="find_anyons\n\n(layers.py:102,\nmethod in layers.Layers)",
			style=filled];
		layers__Layers__find_anyons_all		 [fillcolor="#ffc899b2",
			fontcolor="#000000",
			group=1,
			label="find_anyons_all\n\n(layers.py:96,\nmethod in layers.Layers)",
			style=filled];
		layers__Layers__get_time		 [fillcolor="#ffc899b2",
			fontcolor="#000000",
			group=1,
			label="get_time\n\n(layers.py:41,\nmethod in layers.Layers)",
			style=filled];
		layers__Layers__reset		 [fillcolor="#ffc899b2",
			fontcolor="#000000",
			group=1,
			label="reset\n\n(layers.py:45,\nmethod in layers.Layers)",
			style=filled];
		matching__add_virtual_space		 [fillcolor="#fefbccb2",
			fontcolor="#000000",
			group=2,
			label="add_virtual_space\n\n(matching.py:218,\nfunction in matching)",
			style=filled];
		matching__add_virtual_time		 [fillcolor="#fefbccb2",
			fontcolor="#000000",
			group=2,
			label="add_virtual_time\n\n(matching.py:232,\nfunction in matching)",
			style=filled];
		matching__make_graphX		 [fillcolor="#fefbccb2",
			fontcolor="#000000",
			group=2,
			label="make_graph\n\n(matching.py:111,\nfunction in matching)",
			style=filled];
		matching__match		 [fillcolor="#fefbccb2",
			fontcolor="#000000",
			group=2,
			label="match\n\n(matching.py:57,\nfunction in matching)",
			style=filled];
		matching__match_simple		 [fillcolor="#fefbccb2",
			fontcolor="#000000",
			group=2,
			label="match_simple\n\n(matching.py:9,\nfunction in matching)",
			style=filled];
		matching__pairs_remove_out_planar		 [fillcolor="#fefbccb2",
			fontcolor="#000000",
			group=2,
			label="pairs_remove_out_planar\n\n(matching.py:156,\nfunction in matching)",
			style=filled];
		matching__pairs_remove_out_planar_space		 [fillcolor="#fefbccb2",
			fontcolor="#000000",
			group=2,
			label="pairs_remove_out_planar_space\n\n(matching.py:192,\nfunction in matching)",
			style=filled];
		matching__pairs_remove_out_toric		 [fillcolor="#fefbccb2",
			fontcolor="#000000",
			group=2,
			label="pairs_remove_out_toric\n\n(matching.py:208,\nfunction in matching)",
			style=filled];
		matching_test__TestMatching		 [fillcolor="#ebfeccb2",
			fontcolor="#000000",
			group=3,
			label="TestMatching\n\n(matching_test.py:14,\nclass in matching_test)",
			style=filled];
		matching_test__TestMatching__test_make_graphX		 [fillcolor="#d7ff99b2",
			fontcolor="#000000",
			group=3,
			label="test_make_graph\n\n(matching_test.py:16,\nmethod in matching_test.TestMatching)",
			style=filled];
		result_one_point_hybrid__get_file_name		 [fillcolor="#d3feccb2",
			fontcolor="#000000",
			group=4,
			label="get_file_name\n\n(result_one_point_hybrid.py:19,\nfunction in result_one_point_hybrid)",
			style=filled];
		result_one_point_local__get_file_name		 [fillcolor="#ccfedbb2",
			fontcolor="#000000",
			group=5,
			label="get_file_name\n\n(result_one_point_local.py:20,\nfunction in result_one_point_local)",
			style=filled];
		result_one_point_model__get_file_name		 [fillcolor="#ccfef3b2",
			fontcolor="#000000",
			group=6,
			label="get_file_name\n\n(result_one_point_model.py:21,\nfunction in result_one_point_model)",
			style=filled];
		result_one_point_nn__get_file_name		 [fillcolor="#ccf3feb2",
			fontcolor="#000000",
			group=7,
			label="get_file_name\n\n(result_one_point_nn.py:19,\nfunction in result_one_point_nn)",
			style=filled];
		result_one_point_random__get_file_name_pq		 [fillcolor="#ccdbfeb2",
			fontcolor="#000000",
			group=8,
			label="get_file_name_pq\n\n(result_one_point_random.py:19,\nfunction in result_one_point_random)",
			style=filled];
		result_one_point_tau__get_file_name		 [fillcolor="#d3ccfeb2",
			fontcolor="#000000",
			group=9,
			label="get_file_name\n\n(result_one_point_tau.py:19,\nfunction in result_one_point_tau)",
			style=filled];
		result_simulate__lambda_env		 [fillcolor="#ebccfeb2",
			fontcolor="#000000",
			group=10,
			label="lambda_env\n\n(result_simulate.py:13,\nfunction in result_simulate)",
			style=filled];
		surface_code__SurfaceCode		 [fillcolor="#feccfbb2",
			fontcolor="#000000",
			group=11,
			label="SurfaceCode\n\n(surface_code.py:15,\nclass in surface_code)",
			style=filled];
		surface_code__SurfaceCode____init__		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="__init__\n\n(surface_code.py:43,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode___env_error_rate		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="_env_error_rate\n\n(surface_code.py:302,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode___incomplete_measuerement		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="_incomplete_measuerement\n\n(surface_code.py:258,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode___measure_stabilizer		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="_measure_stabilizer\n\n(surface_code.py:166,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode___measure_stabilizer_boundary		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="_measure_stabilizer_boundary\n\n(surface_code.py:198,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode___measure_stabilizer_bulk		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="_measure_stabilizer_bulk\n\n(surface_code.py:189,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode___measure_stabilizer_side		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="_measure_stabilizer_side\n\n(surface_code.py:203,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode___noisy_measurement_noreversed		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="_noisy_measurement_noreversed\n\n(surface_code.py:503,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode___noisy_measurement_reversed		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="_noisy_measurement_reversed\n\n(surface_code.py:515,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode___select_stabilizer		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="_select_stabilizer\n\n(surface_code.py:586,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode___stabilizer_lie		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="_stabilizer_lie\n\n(surface_code.py:269,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode___stabilizer_qubits_boundary		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="_stabilizer_qubits_boundary\n\n(surface_code.py:236,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode___stabilizer_qubits_bulk		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="_stabilizer_qubits_bulk\n\n(surface_code.py:218,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__apply_measurement_error		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="apply_measurement_error\n\n(surface_code.py:275,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__apply_qubit_error		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="apply_qubit_error\n\n(surface_code.py:281,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__correct_error		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="correct_error\n\n(surface_code.py:694,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__environmental_noise		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="environmental_noise\n\n(surface_code.py:289,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__get_plaqs		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="get_plaqs\n\n(surface_code.py:670,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__get_stars		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="get_stars\n\n(surface_code.py:666,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__init_error_obj		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="init_error_obj\n\n(surface_code.py:110,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__init_error_obj_extra		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="init_error_obj_extra\n\n(surface_code.py:131,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__measure_all_stabilizers		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="measure_all_stabilizers\n\n(surface_code.py:137,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__measure_logical		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="measure_logical\n\n(surface_code.py:674,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__measure_stabilizer_type		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="measure_stabilizer_type\n\n(surface_code.py:149,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__measurement_protocol_hybrid		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="measurement_protocol_hybrid\n\n(surface_code.py:442,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__measurement_protocol_local		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="measurement_protocol_local\n\n(surface_code.py:461,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__measurement_protocol_single		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="measurement_protocol_single\n\n(surface_code.py:381,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__measurement_protocol_single_rounds		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="measurement_protocol_single_rounds\n\n(surface_code.py:419,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__measurement_protocol_single_rounds_rev		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="measurement_protocol_single_rounds_rev\n\n(surface_code.py:396,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__noisy_measurement		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="noisy_measurement\n\n(surface_code.py:492,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__noisy_measurement_cycle		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="noisy_measurement_cycle\n\n(surface_code.py:469,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__noisy_measurement_specific		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="noisy_measurement_specific\n\n(surface_code.py:527,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__noisy_measurement_specific_extra		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="noisy_measurement_specific_extra\n\n(surface_code.py:576,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__plot		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="plot\n\n(surface_code.py:595,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__plot_all		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="plot_all\n\n(surface_code.py:626,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__plot_rounds		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="plot_rounds\n\n(surface_code.py:650,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__reset		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="reset\n\n(surface_code.py:661,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__select_measurement_protocol		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="select_measurement_protocol\n\n(surface_code.py:309,\nmethod in surface_code.SurfaceCode)",
			style=filled];
		surface_code__SurfaceCode__separate_bulk_boundary		 [fillcolor="#ff99f7b2",
			fontcolor="#000000",
			group=11,
			label="separate_bulk_boundary\n\n(surface_code.py:473,\nmethod in surface_code.SurfaceCode)",
			style=filled];
	}
	subgraph G_cc_0 {
		errors;
		errors__Generator;
		errors -> errors__Generator		 [color="#838b8b",
			style=dashed];
		layers;
		matching;
		layers -> matching		 [color="#000000",
			style=solid];
		layers__Layers;
		layers -> layers__Layers		 [color="#838b8b",
			style=dashed];
		matching__add_virtual_space;
		matching -> matching__add_virtual_space		 [color="#838b8b",
			style=dashed];
		matching__add_virtual_time;
		matching -> matching__add_virtual_time		 [color="#838b8b",
			style=dashed];
		matching__make_graphX;
		matching -> matching__make_graphX		 [color="#838b8b",
			style=dashed];
		matching__match;
		matching -> matching__match		 [color="#838b8b",
			style=dashed];
		matching__match_simple;
		matching -> matching__match_simple		 [color="#838b8b",
			style=dashed];
		matching__pairs_remove_out_planar;
		matching -> matching__pairs_remove_out_planar		 [color="#838b8b",
			style=dashed];
		matching__pairs_remove_out_planar_space;
		matching -> matching__pairs_remove_out_planar_space		 [color="#838b8b",
			style=dashed];
		matching__pairs_remove_out_toric;
		matching -> matching__pairs_remove_out_toric		 [color="#838b8b",
			style=dashed];
		matching_test;
		matching_test -> matching		 [color="#000000",
			style=solid];
		matching_test__TestMatching;
		matching_test -> matching_test__TestMatching		 [color="#838b8b",
			style=dashed];
		result_one_point_hybrid;
		result_one_point_hybrid -> layers		 [color="#000000",
			style=solid];
		result_one_point_hybrid -> matching		 [color="#000000",
			style=solid];
		surface_code;
		result_one_point_hybrid -> surface_code		 [color="#000000",
			style=solid];
		result_one_point_hybrid -> layers__Layers		 [color="#000000",
			style=solid];
		layers__Layers____init__;
		result_one_point_hybrid -> layers__Layers____init__		 [color="#000000",
			style=solid];
		layers__Layers__add;
		result_one_point_hybrid -> layers__Layers__add		 [color="#000000",
			style=solid];
		layers__Layers__decode;
		result_one_point_hybrid -> layers__Layers__decode		 [color="#000000",
			style=solid];
		layers__Layers__reset;
		result_one_point_hybrid -> layers__Layers__reset		 [color="#000000",
			style=solid];
		result_one_point_hybrid__get_file_name;
		result_one_point_hybrid -> result_one_point_hybrid__get_file_name		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode;
		result_one_point_hybrid -> surface_code__SurfaceCode		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode____init__;
		result_one_point_hybrid -> surface_code__SurfaceCode____init__		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__init_error_obj;
		result_one_point_hybrid -> surface_code__SurfaceCode__init_error_obj		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__init_error_obj_extra;
		result_one_point_hybrid -> surface_code__SurfaceCode__init_error_obj_extra		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measure_all_stabilizers;
		result_one_point_hybrid -> surface_code__SurfaceCode__measure_all_stabilizers		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measure_logical;
		result_one_point_hybrid -> surface_code__SurfaceCode__measure_logical		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__noisy_measurement_cycle;
		result_one_point_hybrid -> surface_code__SurfaceCode__noisy_measurement_cycle		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__reset;
		result_one_point_hybrid -> surface_code__SurfaceCode__reset		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__select_measurement_protocol;
		result_one_point_hybrid -> surface_code__SurfaceCode__select_measurement_protocol		 [color="#000000",
			style=solid];
		result_one_point_local;
		result_one_point_local -> layers		 [color="#000000",
			style=solid];
		result_one_point_local -> matching		 [color="#000000",
			style=solid];
		result_one_point_local -> surface_code		 [color="#000000",
			style=solid];
		result_one_point_local -> layers__Layers		 [color="#000000",
			style=solid];
		result_one_point_local -> layers__Layers____init__		 [color="#000000",
			style=solid];
		result_one_point_local -> layers__Layers__add		 [color="#000000",
			style=solid];
		result_one_point_local -> layers__Layers__decode		 [color="#000000",
			style=solid];
		result_one_point_local -> layers__Layers__reset		 [color="#000000",
			style=solid];
		result_one_point_local__get_file_name;
		result_one_point_local -> result_one_point_local__get_file_name		 [color="#838b8b",
			style=dashed];
		result_one_point_local -> surface_code__SurfaceCode		 [color="#000000",
			style=solid];
		result_one_point_local -> surface_code__SurfaceCode____init__		 [color="#000000",
			style=solid];
		result_one_point_local -> surface_code__SurfaceCode__init_error_obj		 [color="#000000",
			style=solid];
		result_one_point_local -> surface_code__SurfaceCode__measure_all_stabilizers		 [color="#000000",
			style=solid];
		result_one_point_local -> surface_code__SurfaceCode__measure_logical		 [color="#000000",
			style=solid];
		result_one_point_local -> surface_code__SurfaceCode__noisy_measurement_cycle		 [color="#000000",
			style=solid];
		result_one_point_local -> surface_code__SurfaceCode__reset		 [color="#000000",
			style=solid];
		result_one_point_local -> surface_code__SurfaceCode__select_measurement_protocol		 [color="#000000",
			style=solid];
		result_one_point_model;
		result_one_point_model -> layers		 [color="#000000",
			style=solid];
		result_one_point_model -> matching		 [color="#000000",
			style=solid];
		result_one_point_model -> surface_code		 [color="#000000",
			style=solid];
		result_one_point_model -> layers__Layers		 [color="#000000",
			style=solid];
		result_one_point_model -> layers__Layers____init__		 [color="#000000",
			style=solid];
		result_one_point_model -> layers__Layers__add		 [color="#000000",
			style=solid];
		result_one_point_model -> layers__Layers__decode		 [color="#000000",
			style=solid];
		result_one_point_model -> layers__Layers__reset		 [color="#000000",
			style=solid];
		result_one_point_model__get_file_name;
		result_one_point_model -> result_one_point_model__get_file_name		 [color="#838b8b",
			style=dashed];
		result_one_point_model -> surface_code__SurfaceCode		 [color="#000000",
			style=solid];
		result_one_point_model -> surface_code__SurfaceCode____init__		 [color="#000000",
			style=solid];
		result_one_point_model -> surface_code__SurfaceCode__init_error_obj		 [color="#000000",
			style=solid];
		result_one_point_model -> surface_code__SurfaceCode__measure_all_stabilizers		 [color="#000000",
			style=solid];
		result_one_point_model -> surface_code__SurfaceCode__measure_logical		 [color="#000000",
			style=solid];
		result_one_point_model -> surface_code__SurfaceCode__noisy_measurement_cycle		 [color="#000000",
			style=solid];
		result_one_point_model -> surface_code__SurfaceCode__reset		 [color="#000000",
			style=solid];
		result_one_point_model -> surface_code__SurfaceCode__select_measurement_protocol		 [color="#000000",
			style=solid];
		result_one_point_nn;
		result_one_point_nn -> layers		 [color="#000000",
			style=solid];
		result_one_point_nn -> matching		 [color="#000000",
			style=solid];
		result_one_point_nn -> surface_code		 [color="#000000",
			style=solid];
		result_one_point_nn -> layers__Layers		 [color="#000000",
			style=solid];
		result_one_point_nn -> layers__Layers____init__		 [color="#000000",
			style=solid];
		result_one_point_nn -> layers__Layers__add		 [color="#000000",
			style=solid];
		result_one_point_nn -> layers__Layers__decode		 [color="#000000",
			style=solid];
		result_one_point_nn -> layers__Layers__reset		 [color="#000000",
			style=solid];
		result_one_point_nn__get_file_name;
		result_one_point_nn -> result_one_point_nn__get_file_name		 [color="#838b8b",
			style=dashed];
		result_one_point_nn -> surface_code__SurfaceCode		 [color="#000000",
			style=solid];
		result_one_point_nn -> surface_code__SurfaceCode____init__		 [color="#000000",
			style=solid];
		result_one_point_nn -> surface_code__SurfaceCode__init_error_obj		 [color="#000000",
			style=solid];
		result_one_point_nn -> surface_code__SurfaceCode__measure_all_stabilizers		 [color="#000000",
			style=solid];
		result_one_point_nn -> surface_code__SurfaceCode__measure_logical		 [color="#000000",
			style=solid];
		result_one_point_nn -> surface_code__SurfaceCode__noisy_measurement_cycle		 [color="#000000",
			style=solid];
		result_one_point_nn -> surface_code__SurfaceCode__reset		 [color="#000000",
			style=solid];
		result_one_point_nn -> surface_code__SurfaceCode__select_measurement_protocol		 [color="#000000",
			style=solid];
		result_one_point_random;
		result_one_point_random -> layers		 [color="#000000",
			style=solid];
		result_one_point_random -> matching		 [color="#000000",
			style=solid];
		result_one_point_random -> surface_code		 [color="#000000",
			style=solid];
		result_one_point_random -> layers__Layers		 [color="#000000",
			style=solid];
		result_one_point_random -> layers__Layers____init__		 [color="#000000",
			style=solid];
		result_one_point_random -> layers__Layers__add		 [color="#000000",
			style=solid];
		result_one_point_random -> layers__Layers__decode		 [color="#000000",
			style=solid];
		result_one_point_random -> layers__Layers__reset		 [color="#000000",
			style=solid];
		result_one_point_random__get_file_name_pq;
		result_one_point_random -> result_one_point_random__get_file_name_pq		 [color="#838b8b",
			style=dashed];
		result_one_point_random -> surface_code__SurfaceCode		 [color="#000000",
			style=solid];
		result_one_point_random -> surface_code__SurfaceCode____init__		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__apply_measurement_error;
		result_one_point_random -> surface_code__SurfaceCode__apply_measurement_error		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__apply_qubit_error;
		result_one_point_random -> surface_code__SurfaceCode__apply_qubit_error		 [color="#000000",
			style=solid];
		result_one_point_random -> surface_code__SurfaceCode__measure_all_stabilizers		 [color="#000000",
			style=solid];
		result_one_point_random -> surface_code__SurfaceCode__measure_logical		 [color="#000000",
			style=solid];
		result_one_point_random -> surface_code__SurfaceCode__reset		 [color="#000000",
			style=solid];
		result_one_point_tau;
		result_one_point_tau -> layers		 [color="#000000",
			style=solid];
		result_one_point_tau -> matching		 [color="#000000",
			style=solid];
		result_one_point_tau -> surface_code		 [color="#000000",
			style=solid];
		result_one_point_tau -> layers__Layers		 [color="#000000",
			style=solid];
		result_one_point_tau -> layers__Layers____init__		 [color="#000000",
			style=solid];
		result_one_point_tau -> layers__Layers__add		 [color="#000000",
			style=solid];
		result_one_point_tau -> layers__Layers__decode		 [color="#000000",
			style=solid];
		result_one_point_tau -> layers__Layers__reset		 [color="#000000",
			style=solid];
		result_one_point_tau__get_file_name;
		result_one_point_tau -> result_one_point_tau__get_file_name		 [color="#838b8b",
			style=dashed];
		result_one_point_tau -> surface_code__SurfaceCode		 [color="#000000",
			style=solid];
		result_one_point_tau -> surface_code__SurfaceCode____init__		 [color="#000000",
			style=solid];
		result_one_point_tau -> surface_code__SurfaceCode__init_error_obj		 [color="#000000",
			style=solid];
		result_one_point_tau -> surface_code__SurfaceCode__init_error_obj_extra		 [color="#000000",
			style=solid];
		result_one_point_tau -> surface_code__SurfaceCode__measure_all_stabilizers		 [color="#000000",
			style=solid];
		result_one_point_tau -> surface_code__SurfaceCode__measure_logical		 [color="#000000",
			style=solid];
		result_one_point_tau -> surface_code__SurfaceCode__noisy_measurement_cycle		 [color="#000000",
			style=solid];
		result_one_point_tau -> surface_code__SurfaceCode__reset		 [color="#000000",
			style=solid];
		result_one_point_tau -> surface_code__SurfaceCode__select_measurement_protocol		 [color="#000000",
			style=solid];
		result_simulate;
		result_simulate -> layers		 [color="#000000",
			style=solid];
		result_simulate -> matching		 [color="#000000",
			style=solid];
		result_simulate -> surface_code		 [color="#000000",
			style=solid];
		result_simulate -> layers__Layers		 [color="#000000",
			style=solid];
		result_simulate -> layers__Layers____init__		 [color="#000000",
			style=solid];
		result_simulate -> layers__Layers__add		 [color="#000000",
			style=solid];
		result_simulate -> layers__Layers__decode		 [color="#000000",
			style=solid];
		layers__Layers__find_anyons_all;
		result_simulate -> layers__Layers__find_anyons_all		 [color="#000000",
			style=solid];
		result_simulate -> layers__Layers__reset		 [color="#000000",
			style=solid];
		result_simulate -> matching__match		 [color="#000000",
			style=solid];
		result_simulate__lambda_env;
		result_simulate -> result_simulate__lambda_env		 [color="#838b8b",
			style=dashed];
		result_simulate -> surface_code__SurfaceCode		 [color="#000000",
			style=solid];
		result_simulate -> surface_code__SurfaceCode____init__		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode___stabilizer_lie;
		result_simulate -> surface_code__SurfaceCode___stabilizer_lie		 [color="#000000",
			style=solid];
		result_simulate -> surface_code__SurfaceCode__apply_qubit_error		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__correct_error;
		result_simulate -> surface_code__SurfaceCode__correct_error		 [color="#000000",
			style=solid];
		result_simulate -> surface_code__SurfaceCode__measure_all_stabilizers		 [color="#000000",
			style=solid];
		result_simulate -> surface_code__SurfaceCode__measure_logical		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__plot_all;
		result_simulate -> surface_code__SurfaceCode__plot_all		 [color="#000000",
			style=solid];
		result_simulate -> surface_code__SurfaceCode__reset		 [color="#000000",
			style=solid];
		surface_code -> errors		 [color="#000000",
			style=solid];
		surface_code -> surface_code__SurfaceCode		 [color="#838b8b",
			style=dashed];
		errors__Generator____init__;
		errors__Generator -> errors__Generator____init__		 [color="#838b8b",
			style=dashed];
		errors__Generator___generate_name;
		errors__Generator -> errors__Generator___generate_name		 [color="#838b8b",
			style=dashed];
		errors__Generator___load_model;
		errors__Generator -> errors__Generator___load_model		 [color="#838b8b",
			style=dashed];
		errors__Generator___pauli_error;
		errors__Generator -> errors__Generator___pauli_error		 [color="#838b8b",
			style=dashed];
		errors__Generator___symbol_to_error;
		errors__Generator -> errors__Generator___symbol_to_error		 [color="#838b8b",
			style=dashed];
		errors__Generator___symbol_to_error_list;
		errors__Generator -> errors__Generator___symbol_to_error_list		 [color="#838b8b",
			style=dashed];
		errors__Generator__get_errors;
		errors__Generator -> errors__Generator__get_errors		 [color="#838b8b",
			style=dashed];
		errors__Generator____init__ -> errors__Generator___load_model		 [color="#000000",
			style=solid];
		errors__Generator____init__ -> errors__Generator___symbol_to_error_list		 [color="#000000",
			style=solid];
		errors__Generator___load_model -> errors__Generator___generate_name		 [color="#000000",
			style=solid];
		errors__Generator___symbol_to_error -> errors__Generator___pauli_error		 [color="#000000",
			style=solid];
		errors__Generator___symbol_to_error_list -> errors__Generator___symbol_to_error		 [color="#000000",
			style=solid];
		errors__Generator__get_errors -> errors__Generator___symbol_to_error_list		 [color="#000000",
			style=solid];
		layers__Layers -> layers__Layers____init__		 [color="#838b8b",
			style=dashed];
		layers__Layers -> layers__Layers__add		 [color="#838b8b",
			style=dashed];
		layers__Layers -> layers__Layers__decode		 [color="#838b8b",
			style=dashed];
		layers__Layers__find_anyons;
		layers__Layers -> layers__Layers__find_anyons		 [color="#838b8b",
			style=dashed];
		layers__Layers -> layers__Layers__find_anyons_all		 [color="#838b8b",
			style=dashed];
		layers__Layers__get_time;
		layers__Layers -> layers__Layers__get_time		 [color="#838b8b",
			style=dashed];
		layers__Layers -> layers__Layers__reset		 [color="#838b8b",
			style=dashed];
		layers__Layers__decode -> layers__Layers__find_anyons_all		 [color="#000000",
			style=solid];
		layers__Layers__decode -> matching__match_simple		 [color="#000000",
			style=solid];
		layers__Layers__find_anyons_all -> layers__Layers__find_anyons		 [color="#000000",
			style=solid];
		matching__match -> matching__add_virtual_space		 [color="#000000",
			style=solid];
		matching__match -> matching__add_virtual_time		 [color="#000000",
			style=solid];
		matching__match -> matching__make_graphX		 [color="#000000",
			style=solid];
		matching__match -> matching__pairs_remove_out_planar		 [color="#000000",
			style=solid];
		matching__match -> matching__pairs_remove_out_toric		 [color="#000000",
			style=solid];
		matching__match_simple -> matching__add_virtual_space		 [color="#000000",
			style=solid];
		matching__match_simple -> matching__make_graphX		 [color="#000000",
			style=solid];
		matching__match_simple -> matching__pairs_remove_out_planar_space		 [color="#000000",
			style=solid];
		matching_test__TestMatching__test_make_graphX;
		matching_test__TestMatching -> matching_test__TestMatching__test_make_graphX		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode -> surface_code__SurfaceCode____init__		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode___env_error_rate;
		surface_code__SurfaceCode -> surface_code__SurfaceCode___env_error_rate		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode___incomplete_measuerement;
		surface_code__SurfaceCode -> surface_code__SurfaceCode___incomplete_measuerement		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode___measure_stabilizer;
		surface_code__SurfaceCode -> surface_code__SurfaceCode___measure_stabilizer		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode___measure_stabilizer_boundary;
		surface_code__SurfaceCode -> surface_code__SurfaceCode___measure_stabilizer_boundary		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode___measure_stabilizer_bulk;
		surface_code__SurfaceCode -> surface_code__SurfaceCode___measure_stabilizer_bulk		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode___measure_stabilizer_side;
		surface_code__SurfaceCode -> surface_code__SurfaceCode___measure_stabilizer_side		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode___noisy_measurement_noreversed;
		surface_code__SurfaceCode -> surface_code__SurfaceCode___noisy_measurement_noreversed		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode___noisy_measurement_reversed;
		surface_code__SurfaceCode -> surface_code__SurfaceCode___noisy_measurement_reversed		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode___select_stabilizer;
		surface_code__SurfaceCode -> surface_code__SurfaceCode___select_stabilizer		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode -> surface_code__SurfaceCode___stabilizer_lie		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode___stabilizer_qubits_boundary;
		surface_code__SurfaceCode -> surface_code__SurfaceCode___stabilizer_qubits_boundary		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode___stabilizer_qubits_bulk;
		surface_code__SurfaceCode -> surface_code__SurfaceCode___stabilizer_qubits_bulk		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode -> surface_code__SurfaceCode__apply_measurement_error		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode -> surface_code__SurfaceCode__apply_qubit_error		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode -> surface_code__SurfaceCode__correct_error		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode__environmental_noise;
		surface_code__SurfaceCode -> surface_code__SurfaceCode__environmental_noise		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode__get_plaqs;
		surface_code__SurfaceCode -> surface_code__SurfaceCode__get_plaqs		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode__get_stars;
		surface_code__SurfaceCode -> surface_code__SurfaceCode__get_stars		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode -> surface_code__SurfaceCode__init_error_obj		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode -> surface_code__SurfaceCode__init_error_obj_extra		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode -> surface_code__SurfaceCode__measure_all_stabilizers		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode -> surface_code__SurfaceCode__measure_logical		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode__measure_stabilizer_type;
		surface_code__SurfaceCode -> surface_code__SurfaceCode__measure_stabilizer_type		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode__measurement_protocol_hybrid;
		surface_code__SurfaceCode -> surface_code__SurfaceCode__measurement_protocol_hybrid		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode__measurement_protocol_local;
		surface_code__SurfaceCode -> surface_code__SurfaceCode__measurement_protocol_local		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode__measurement_protocol_single;
		surface_code__SurfaceCode -> surface_code__SurfaceCode__measurement_protocol_single		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode__measurement_protocol_single_rounds;
		surface_code__SurfaceCode -> surface_code__SurfaceCode__measurement_protocol_single_rounds		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode__measurement_protocol_single_rounds_rev;
		surface_code__SurfaceCode -> surface_code__SurfaceCode__measurement_protocol_single_rounds_rev		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode__noisy_measurement;
		surface_code__SurfaceCode -> surface_code__SurfaceCode__noisy_measurement		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode -> surface_code__SurfaceCode__noisy_measurement_cycle		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode__noisy_measurement_specific;
		surface_code__SurfaceCode -> surface_code__SurfaceCode__noisy_measurement_specific		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode__noisy_measurement_specific_extra;
		surface_code__SurfaceCode -> surface_code__SurfaceCode__noisy_measurement_specific_extra		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode__plot;
		surface_code__SurfaceCode -> surface_code__SurfaceCode__plot		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode -> surface_code__SurfaceCode__plot_all		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode__plot_rounds;
		surface_code__SurfaceCode -> surface_code__SurfaceCode__plot_rounds		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode -> surface_code__SurfaceCode__reset		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode -> surface_code__SurfaceCode__select_measurement_protocol		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode__separate_bulk_boundary;
		surface_code__SurfaceCode -> surface_code__SurfaceCode__separate_bulk_boundary		 [color="#838b8b",
			style=dashed];
		surface_code__SurfaceCode___measure_stabilizer -> surface_code__SurfaceCode___measure_stabilizer_boundary		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode___measure_stabilizer -> surface_code__SurfaceCode___measure_stabilizer_bulk		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode___measure_stabilizer_boundary -> surface_code__SurfaceCode___measure_stabilizer_side		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode___measure_stabilizer_bulk -> surface_code__SurfaceCode___stabilizer_qubits_bulk		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode___measure_stabilizer_side -> surface_code__SurfaceCode___stabilizer_qubits_boundary		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode___noisy_measurement_noreversed -> surface_code__SurfaceCode___measure_stabilizer		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode___noisy_measurement_reversed -> surface_code__SurfaceCode___measure_stabilizer		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__apply_measurement_error -> surface_code__SurfaceCode___stabilizer_lie		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__correct_error -> surface_code__SurfaceCode___select_stabilizer		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__environmental_noise -> surface_code__SurfaceCode__apply_qubit_error		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__init_error_obj -> errors__Generator		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__init_error_obj -> errors__Generator____init__		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__init_error_obj_extra -> errors__Generator		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measure_all_stabilizers -> surface_code__SurfaceCode__measure_stabilizer_type		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measure_stabilizer_type -> surface_code__SurfaceCode___measure_stabilizer		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measurement_protocol_hybrid -> surface_code__SurfaceCode___env_error_rate		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measurement_protocol_hybrid -> surface_code__SurfaceCode___incomplete_measuerement		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measurement_protocol_hybrid -> surface_code__SurfaceCode__environmental_noise		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measurement_protocol_hybrid -> surface_code__SurfaceCode__noisy_measurement_specific		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measurement_protocol_hybrid -> surface_code__SurfaceCode__noisy_measurement_specific_extra		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measurement_protocol_local -> surface_code__SurfaceCode__noisy_measurement		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measurement_protocol_single -> surface_code__SurfaceCode___env_error_rate		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measurement_protocol_single -> surface_code__SurfaceCode___incomplete_measuerement		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measurement_protocol_single -> surface_code__SurfaceCode__environmental_noise		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measurement_protocol_single -> surface_code__SurfaceCode__noisy_measurement_specific		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measurement_protocol_single_rounds -> surface_code__SurfaceCode___env_error_rate		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measurement_protocol_single_rounds -> surface_code__SurfaceCode___incomplete_measuerement		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measurement_protocol_single_rounds -> surface_code__SurfaceCode__environmental_noise		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measurement_protocol_single_rounds -> surface_code__SurfaceCode__noisy_measurement_specific		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measurement_protocol_single_rounds_rev -> surface_code__SurfaceCode___env_error_rate		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measurement_protocol_single_rounds_rev -> surface_code__SurfaceCode___incomplete_measuerement		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measurement_protocol_single_rounds_rev -> surface_code__SurfaceCode__environmental_noise		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__measurement_protocol_single_rounds_rev -> surface_code__SurfaceCode__noisy_measurement_specific		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__noisy_measurement -> surface_code__SurfaceCode__noisy_measurement_specific		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__noisy_measurement_cycle -> surface_code__SurfaceCode__measurement_protocol_local		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__noisy_measurement_specific -> errors__Generator__get_errors		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__noisy_measurement_specific -> surface_code__SurfaceCode___noisy_measurement_noreversed		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__noisy_measurement_specific -> surface_code__SurfaceCode___noisy_measurement_reversed		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__noisy_measurement_specific -> surface_code__SurfaceCode___stabilizer_qubits_boundary		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__noisy_measurement_specific -> surface_code__SurfaceCode___stabilizer_qubits_bulk		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__noisy_measurement_specific_extra -> errors__Generator__get_errors		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__noisy_measurement_specific_extra -> surface_code__SurfaceCode___noisy_measurement_reversed		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__noisy_measurement_specific_extra -> surface_code__SurfaceCode___stabilizer_qubits_bulk		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__select_measurement_protocol -> surface_code__SurfaceCode___env_error_rate		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__select_measurement_protocol -> surface_code__SurfaceCode__measurement_protocol_hybrid		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__select_measurement_protocol -> surface_code__SurfaceCode__measurement_protocol_local		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__select_measurement_protocol -> surface_code__SurfaceCode__measurement_protocol_single		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__select_measurement_protocol -> surface_code__SurfaceCode__measurement_protocol_single_rounds		 [color="#000000",
			style=solid];
		surface_code__SurfaceCode__select_measurement_protocol -> surface_code__SurfaceCode__measurement_protocol_single_rounds_rev		 [color="#000000",
			style=solid];
	}
}
